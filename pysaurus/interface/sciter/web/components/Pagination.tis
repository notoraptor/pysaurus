include "sciter:reactor.tis";
include "../utils/utils.tis";

class Pagination: Reactor.Component {
	function this(props, children) {
		/**
		singular: str
		plural: str
		nbPages: int
		pageNumber: int
		onChange: function(int)
		**/
		this.props = props || {};
		this.children = children || {};
	}
	function render() {
		const singular = this.props.singular;
		const plural = this.props.plural;
		const nbPages = this.props.nbPages;
		const pageNumber = this.props.pageNumber;
		return (
			nbPages ? (
				<span class="navigation status">
					<button class="first" :disabled={pageNumber === 0}>&lt;&lt;</button>
					<button class="previous" :disabled={pageNumber === 0}>&lt;</button>{' '}
					<span>{Utils.sentence(singular)}{' '}<input type="integer" class="current" min={1} max={nbPages} step={1} :value={pageNumber + 1}/> / {nbPages}</span>{' '}
					<button class="next" :disabled={pageNumber === nbPages - 1}>&gt;</button>
					<button class="last" :disabled={pageNumber === nbPages - 1}>&gt;&gt;</button>
				</span>
			) : (<div class="navigation status"><em>0 {plural}</em></div>)
		)
	}

	event click $(button.first) {
		if (this.props.pageNumber !== 0) {
			this.props.onChange(0);
		}
	}
	event click $(button.previous) {
		if (this.props.pageNumber > 0) {
			this.props.onChange(this.props.pageNumber - 1);
		}
	}
	event click $(button.next) {
		if (this.props.pageNumber < this.props.nbPages - 1) {
			this.props.onChange(this.props.pageNumber + 1);
		}
	}
	event click $(button.last) {
		if (this.props.pageNumber !== this.props.nbPages - 1) {
			this.props.onChange(this.props.nbPages - 1);
		}
	}
	event change $(input.current) (evt, element) {
		let pageNumber = (element.value || 1) - 1;
		if (pageNumber >= this.props.nbPages)
			pageNumber = this.props.nbPages - 1;
		if (pageNumber < 0)
			pageNumber = 0;
		if (pageNumber !== this.props.pageNumber)
			this.props.onChange(pageNumber);
	}
}