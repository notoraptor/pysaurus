include "sciter:reactor.tis";

class FancyBox: Reactor.Component {
	function this(props, children) {
		// title
		// onClose()
		// onBuild(onClose)
		this.props = props || {};
		this.children = children || {};
		this.callbackIndex = -1;
	}
	function render() {
		return (
			<div class="fancybox-wrapper">
				<div class="fancybox">
					<div class="fancybox-header">
						<div class="fancybox-title">{this.props.title}</div>
						<div class="fancybox-close"><button>&times;</button></div>
					</div>
					<div class="fancybox-content">{this.props.onBuild(this.props.onClose)}</div>
				</div>
			</div>
		);
	}
	event click $(.fancybox-close button) (evt, element) {
		this.props.onClose();
	}
	function attached() {
		$(.fancybox-wrapper).state.focus = true;
		const app = this;
		this.callbackIndex = KEYBOARD_MANAGER.register((keyCode) => {
			if (keyCode === Event.VK_ESCAPE)
				app.props.onClose();
		});
	}
	function detached() {
		KEYBOARD_MANAGER.unregister(this.callbackIndex);
	}
}

class FancyDef {
	function this(title, onClose, onBuild) {
		this.title = title;
		this.onClose = onClose;
		this.onBuild = onBuild;
	}
	function render() {
		return <FancyBox title={this.title} onBuild={this.onBuild} onClose={this.onClose}/>;
	}
}