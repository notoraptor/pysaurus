include "sciter:reactor.tis";

class MenuPack: Reactor.Component {
	function this(props, children) {
		// title: str
		this.props = props;
		this.children = children;
		this.display = false;
		const app = this;
		this.hide = function(evt, element) {
			app.update({display: false});
		};
	}
	function render() {
		return (
			<div class="menu-pack">
				<div class="title">
					<div class="text">
						{this.props.title}
					</div>
					<div class="border-bottom"/>
				</div>
				<div class={'content ' + (this.display ? 'show' : 'hide')}>{this.children}</div>
			</div>
		);
	}
	function attached() {
		view.root.on('click', this.hide);
	}
	function detached() {
		view.root.off(this.hide);
	}
	event click $(.menu-pack > .title) (evt, element) {
		this.update({display: !this.display});
		return true;
	}
	event menu-pack-end (evt, element) {
		stdout.println('Menu pack end');
		this.update({display: false});
	}
}

class MenuItem: Reactor.Component {
	function this(props, children) {
		// action? function()
		this.props = props || {};
		this.children = children;
	}
	function render() {
		return (
			<div class="menu-item">
				<div class="icon"/>
				<div class="text">{this.children}</div>
			</div>
		);
	}
	event click $(.menu-item) (evt, element) {
		if (this.props.action)
			this.props.action();
		this.postEvent('menu-pack-end');
		return true;
	}
}

class MenuItemCheck: Reactor.Component {
	function this(props, children) {
		// action? function(checked)
		// checked? bool
		this.props = props || {};
		this.children = children;
	}
	function render() {
		const checked = this.props.checked ? true: false;
		return (
			<div class="menu-item">
				<div class="icon">
					<div class="border">
						<div class={'check ' + (checked ? 'checked' : 'not-checked')}/>
					</div>
				</div>
				<div class="text">{this.children}</div>
			</div>
		);
	}
	event click $(.menu-item) {
		const checked = this.props.checked ? false: true;
		if (this.props.action)
			this.props.action(checked);
		this.postEvent('menu-pack-end');
		return true;
	}
}

class Menu: Reactor.Component {
	function this(props, children) {
		// title: str
		this.props = props;
		this.children = children;
		this.display = false;
	}
	function render() {
		return (
			<div class="menu">
				<div class="title">
					<div class="text">{this.props.title}</div>
					<div class="icon">&#9654;</div>
				</div>
				<div class={'content ' + (this.display ? 'show' : 'hide')}>{this.children}</div>
			</div>
		);
	}
	event click $(.menu > .title) {
		return true;
	}
	event mouseenter $(.menu > .title) {
		this.update({display: true});
		return true;
	}
	event mouseleave {
		this.update({display: false});
		return false;
	}
}