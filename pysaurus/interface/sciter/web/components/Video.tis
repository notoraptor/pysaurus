include "sciter:reactor.tis";

/*
*/

class Video: Reactor.Component {
    function this(props, children) {
        this.props = props || {};
        this.children = children || {};
    }
    function render() {
        const index = this.props.videoIndex;
        const data = this.props.data;
        data.audio_bit_rate = Math.round(data.audio_bit_rate / 1000).toInteger();
        data.extension = data.extension.toUpperCase();
        data.frame_rate = Math.round(data.frame_rate).toInteger();
        return (
            <div class={'video' + (index % 2 ? ' even' : ' odd')}>
                <div class="image">
                    <img alt={data.title} src={data.thumbnail_path}/>
                </div>
                <div class="info">
                    <div class="name">
                        <div><strong>{data.title}</strong></div>
                        {data.title === data.file_title ? '' : <div><em>{data.file_title}</em></div>}
                    </div>
                    <div class="filename"><code>{data.filename}</code></div>
                    <div class="format">
                        <div class="extension"><code>{data.extension}</code></div>
                        <div><strong>{data.size}</strong> / {data.container_format} (<span title={data.video_codec_description}>{data.video_codec}</span>, <span title={data.audio_codec_description}>{data.audio_codec}</span>)</div>
                    </div>
                    <div><strong>{data.width}</strong> x <strong>{data.height}</strong> @ {data.frame_rate} fps | {data.sample_rate} Hz, {data.audio_bit_rate} Kb/s</div>
                    <div><strong>{data.length}</strong> | <code>{data.date}</code></div>
                </div>
            </div>
        );
    }
    event click $(.video .info .filename code) (evt, element) {
        view.open_video(this.props.videoIndex);
    }
}